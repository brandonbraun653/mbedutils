"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ProtocolVersion:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ProtocolVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ProtocolVersion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    RPC_PROTOCOL_VER: _ProtocolVersion.ValueType  # 1

class ProtocolVersion(_ProtocolVersion, metaclass=_ProtocolVersionEnumTypeWrapper): ...

RPC_PROTOCOL_VER: ProtocolVersion.ValueType  # 1
global___ProtocolVersion = ProtocolVersion

class _ErrorCode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ErrorCodeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ErrorCode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ERR_NO_ERROR: _ErrorCode.ValueType  # 0
    """No error occurred"""
    ERR_SVC_ASYNC: _ErrorCode.ValueType  # 1
    """Used to indicate that the service is processing the request asynchronously without error so far"""
    ERR_SVC_BUSY: _ErrorCode.ValueType  # 2
    """Service is busy and cannot process the request"""
    ERR_RPC_VER: _ErrorCode.ValueType  # 3
    """RPC protocol version mismatch"""
    ERR_MSG_VER: _ErrorCode.ValueType  # 4
    """Message version mismatch"""
    ERR_MSG_SIZE: _ErrorCode.ValueType  # 5
    """Message size is incorrect"""
    ERR_MSG_CRC: _ErrorCode.ValueType  # 6
    """Message CRC is incorrect"""
    ERR_MSG_DECODE: _ErrorCode.ValueType  # 7
    """Message failed to decode"""
    ERR_SVC_NOT_FOUND: _ErrorCode.ValueType  # 8
    """Service not found"""
    ERR_MSG_NOT_FOUND: _ErrorCode.ValueType  # 9
    """Message not found"""
    ERR_SVC_MSG: _ErrorCode.ValueType  # 10
    """Service does not support the message"""
    ERR_MAX_ERROR: _ErrorCode.ValueType  # 255
    """Maximum error value"""

class ErrorCode(_ErrorCode, metaclass=_ErrorCodeEnumTypeWrapper): ...

ERR_NO_ERROR: ErrorCode.ValueType  # 0
"""No error occurred"""
ERR_SVC_ASYNC: ErrorCode.ValueType  # 1
"""Used to indicate that the service is processing the request asynchronously without error so far"""
ERR_SVC_BUSY: ErrorCode.ValueType  # 2
"""Service is busy and cannot process the request"""
ERR_RPC_VER: ErrorCode.ValueType  # 3
"""RPC protocol version mismatch"""
ERR_MSG_VER: ErrorCode.ValueType  # 4
"""Message version mismatch"""
ERR_MSG_SIZE: ErrorCode.ValueType  # 5
"""Message size is incorrect"""
ERR_MSG_CRC: ErrorCode.ValueType  # 6
"""Message CRC is incorrect"""
ERR_MSG_DECODE: ErrorCode.ValueType  # 7
"""Message failed to decode"""
ERR_SVC_NOT_FOUND: ErrorCode.ValueType  # 8
"""Service not found"""
ERR_MSG_NOT_FOUND: ErrorCode.ValueType  # 9
"""Message not found"""
ERR_SVC_MSG: ErrorCode.ValueType  # 10
"""Service does not support the message"""
ERR_MAX_ERROR: ErrorCode.ValueType  # 255
"""Maximum error value"""
global___ErrorCode = ErrorCode

class _BuiltinService:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _BuiltinServiceEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_BuiltinService.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SVC_PING: _BuiltinService.ValueType  # 0

class BuiltinService(_BuiltinService, metaclass=_BuiltinServiceEnumTypeWrapper): ...

SVC_PING: BuiltinService.ValueType  # 0
global___BuiltinService = BuiltinService

class _BuiltinMessage:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _BuiltinMessageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_BuiltinMessage.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    MSG_NULL: _BuiltinMessage.ValueType  # 0
    MSG_ERROR: _BuiltinMessage.ValueType  # 1
    MSG_PING: _BuiltinMessage.ValueType  # 2

class BuiltinMessage(_BuiltinMessage, metaclass=_BuiltinMessageEnumTypeWrapper): ...

MSG_NULL: BuiltinMessage.ValueType  # 0
MSG_ERROR: BuiltinMessage.ValueType  # 1
MSG_PING: BuiltinMessage.ValueType  # 2
global___BuiltinMessage = BuiltinMessage

class _BuiltinMessageVersion:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _BuiltinMessageVersionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_BuiltinMessageVersion.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    MSG_VER_ERROR: _BuiltinMessageVersion.ValueType  # 0
    MSG_VER_PING: _BuiltinMessageVersion.ValueType  # 0

class BuiltinMessageVersion(_BuiltinMessageVersion, metaclass=_BuiltinMessageVersionEnumTypeWrapper): ...

MSG_VER_ERROR: BuiltinMessageVersion.ValueType  # 0
MSG_VER_PING: BuiltinMessageVersion.ValueType  # 0
global___BuiltinMessageVersion = BuiltinMessageVersion

@typing.final
class Header(google.protobuf.message.Message):
    """Core message header common to all types. Each functional message type **must**
    have this first in their list of declarations.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CRC_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    SEQID_FIELD_NUMBER: builtins.int
    MSGID_FIELD_NUMBER: builtins.int
    SVCID_FIELD_NUMBER: builtins.int
    crc: builtins.int
    """CRC16 of the message for validity checks (up to 4096 bytes)"""
    size: builtins.int
    """Size of the message in bytes"""
    version: builtins.int
    """Version of this message & RPC protocol. Upper 4 bits are RPC, lower 4 bits are message."""
    seqId: builtins.int
    """Sequence ID for the message transaction"""
    msgId: builtins.int
    """Root message identifier"""
    svcId: builtins.int
    """Service identifier the message is for"""
    def __init__(
        self,
        *,
        crc: builtins.int | None = ...,
        size: builtins.int | None = ...,
        version: builtins.int | None = ...,
        seqId: builtins.int | None = ...,
        msgId: builtins.int | None = ...,
        svcId: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["crc", b"crc", "msgId", b"msgId", "seqId", b"seqId", "size", b"size", "svcId", b"svcId", "version", b"version"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["crc", b"crc", "msgId", b"msgId", "seqId", b"seqId", "size", b"size", "svcId", b"svcId", "version", b"version"]) -> None: ...

global___Header = Header

@typing.final
class BaseMessage(google.protobuf.message.Message):
    """Root type that parsers can use to peek at messages and figure out what type the full message is."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Header: ...
    def __init__(
        self,
        *,
        header: global___Header | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["header", b"header"]) -> None: ...

global___BaseMessage = BaseMessage

@typing.final
class Error(google.protobuf.message.Message):
    """Message type for error responses."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    DETAIL_FIELD_NUMBER: builtins.int
    error: global___ErrorCode.ValueType
    detail: builtins.bytes
    @property
    def header(self) -> global___Header: ...
    def __init__(
        self,
        *,
        header: global___Header | None = ...,
        error: global___ErrorCode.ValueType | None = ...,
        detail: builtins.bytes | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["detail", b"detail", "error", b"error", "header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["detail", b"detail", "error", b"error", "header", b"header"]) -> None: ...

global___Error = Error

@typing.final
class Ping(google.protobuf.message.Message):
    """Simple ping message to test RPC connection."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Header: ...
    def __init__(
        self,
        *,
        header: global___Header | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["header", b"header"]) -> None: ...

global___Ping = Ping

@typing.final
class ListFunctionsRequest(google.protobuf.message.Message):
    """Message to request a list of all available RPC functions."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Header: ...
    def __init__(
        self,
        *,
        header: global___Header | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["header", b"header"]) -> None: ...

global___ListFunctionsRequest = ListFunctionsRequest

@typing.final
class ListFunctionsResponse(google.protobuf.message.Message):
    """Message to respond to a ListFunctionsRequest."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    FUNCTIONS_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> global___Header: ...
    @property
    def functions(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        header: global___Header | None = ...,
        functions: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["header", b"header"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["functions", b"functions", "header", b"header"]) -> None: ...

global___ListFunctionsResponse = ListFunctionsResponse
